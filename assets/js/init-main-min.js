!function(){"use strict";Storage.prototype.setObject=function(e,t){this.setItem(e,JSON.stringify(t))},Storage.prototype.getObject=function(e){e=this.getItem(e);return e&&JSON.parse(e)};const s=()=>{const t=document.createElement("input");t.type="file",t.addEventListener("change",function(){var e=new FileReader;e.onload=function(e){e=e.target,e=JSON.parse(e.result);"unlocked"in e&&"qp"in e&&"complete"in e&&(l=e,h(),p(),localStorage.setObject(n,l))},e.readAsText(t.files[0])},!1);var e=new MouseEvent("click",{view:window,bubbles:!0,cancelable:!0});t.dispatchEvent(e),t.remove()},n="osrs-xosaat-user";let l={combat:!1,unlocked:[],qp:0,complete:{quests:[],achievements:[],collections:[],pets:[]}};null!==localStorage.getItem(n)?l=localStorage.getObject(n):localStorage.setObject(n,l);const i=Object.freeze({Easy:1,Medium:2,Hard:3,Elite:4}),a="#skills-progress",c="#qp-progress",e="#achievements-wrapper",t=(e,"#quests-wrapper"),o=(t,"#pets-wrapper"),r=(o,"#collections-wrapper"),d=(r,{achievements:{data:{},dir:"/assets/json/achievements.json",update:function(){m(e,"#achievements-wrapper .json-item","#achievements-completed","#achievements-total","#achievements-progress",function(){var e=0<$("img[data-src='achievement,hide']").length,t=[],s=[];for(const c in d.achievements.data){var n=d.achievements.data[c],i=l.complete.achievements.includes(n.task)?"complete":"",a=i&&e?"d-none":"";f(n.requirements)&&(a=`<div class="col ${a}">
                                <div class="d-flex flex-column json-item h-100 p-3 rounded ${i}" data-src="achievement">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <h4>${n.diary}</h4>
                                        <span class="difficulty-${n.difficulty}">${n.difficulty}</span>
                                    </div>
                                    <hr/>
                                    <div class="flex-grow-1">
                                        <span class="json-description">${n.task}</span>
                                    </div>
                                    <hr/>
                                    <span class="text-muted"></span>
                                </div>
                            </div>`,(i?s:t).push({diary:n.diary,difficulty:n.difficulty,html:a}))}return u(["diary","difficulty"],t)+u(["diary","difficulty"],s)}.bind(this))}},quests:{data:{},dir:"/assets/json/quests.json",update:function(){m(t,"#quests-wrapper .json-item","#quests-completed","#quests-total","#quests-progress",function(){var e=0<$("img[data-src='quest,hide']").length,t=[],s=[];for(const o in d.quests.data){var n,i=d.quests.data[o],a=l.complete.quests.includes(o)?"complete":"",c=a&&e?"d-none":"";0<i.rewards.skills.length&&(n=new Set(i.requirements.skills.concat(i.rewards.skills)),i.requirements.skills=Array.from(n)),f(i.requirements)&&(n=`<div class="col ${c}">
                                <div class="json-item h-100 p-3 rounded ${a}" data-src="quest">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <h4>${o}</h4>
                                        <span class="difficulty-${i.difficulty}">${i.difficulty}</span>
                                    </div>
                                    <hr/>
                                    <span class="text-muted"></span>
                                </div>
                            </div>`,(a?s:t).push({name:o,html:n}))}return u("name",t)+u("name",s)}.bind(this))}},pets:{data:{},dir:"/assets/json/pets.json",update:function(){m(o,"#pets-wrapper .json-item","#pets-completed","#pets-total","#pets-progress",function(){var e=0<$("img[data-src='pet,hide']").length,t=[],s=[];for(const c in this.data){var n=this.data[c],i=l.complete.pets.includes(c)?"complete":"",a=i&&e?"d-none":"";f(n.requirements)&&(a=`<div class="col ${a}">
                                <div class="json-item h-100 p-3 rounded ${i}" data-src="pet">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <h4>${c}</h4>
                                        <img src="${n.img}" alt="${c} icon"/>
                                    </div>
                                    <hr/>
                                    <span class="text-muted"></span>
                                </div>
                            </div>`,(i?s:t).push({name:c,html:a}))}return u("name",t)+u("name",s)}.bind(this))}},collections:{data:{},dir:"/assets/json/collections.json",update:function(){m(r,"#collections-wrapper .json-item","#collections-completed","#collections-total","#collections-progress",function(){var e=0<$("img[data-src='collection,hide']").length,s=[],n=[];for(const o in this.data){var i=this.data[o],a=l.complete.collections.includes(o)?"complete":"",c=a&&e?"d-none":"";if(f(i.requirements)){let t=`<div class="col ${c}">
                                <div class="d-flex flex-column json-item h-100 p-3 rounded ${a}" data-src="collection">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <h4>${o}</h4>
                                        <img src="${i.img}" alt="${o} icon"/>
                                    </div>
                                    <hr/>
                                    <ul class="d-flex flex-wrap gap-2 py-2">`;for(let e=0;e<Math.min(5,i.items.length);e++)t+=`<li class="list-group-item rounded">${i.items[e]}</li>`;t+=`</ul>
                                <div class="d-flex flex-grow-1"></div>`,5<i.items.length&&(t+=`<span>and ${i.items.length-5} others...</span>`),t+=`<hr/>
                                    <span class="text-muted"></span>
                                </div>
                            </div>`,(a?n:s).push({name:o,html:t})}}return u("name",s)+u("name",n)}.bind(this))}}});function u(s,e){let t="";Array.isArray(s)?e.sort((e,t)=>e[s[0]].localeCompare(t[s[0]])||i[e[s[1]]]-i[t[s[1]]]):e.sort((e,t)=>e[s].localeCompare(t[s]));for(const n of e)t+=n.html;return t}function p(){for(const e of l.unlocked)$(".skill-item[data-src="+e+"]").addClass("unlocked");$(c).text(l.qp),$(a).text(l.unlocked.length)}function m(e,t,s,n,i,a){$(e).html(""),$(e).html(a());var e=$(t).length,a=$(t+".complete").length,c=Math.round(a/e*100)||0;$(n).text(e),$(s).text(a),$(i).width(c+"%"),$(i).text(c+"%"),$(t).on("click",q)}function h(){d.achievements.update(),d.quests.update(),d.pets.update(),d.collections.update()}function f(e){if(e){if("combat"in e&&e.combat&&!l.combat)return;if("quests"in e)for(const t of e.quests)if(!l.complete.quests.includes(t))return;if("skills"in e)for(const s of e.skills)if(!l.unlocked.includes(s))return;if("qp"in e&&l.qp<e.qp)return}return 1}function v(e,t){e.includes(t)?e.splice(e.indexOf(t),1):e.push(t)}function g(e){var t=$(".skill-title",this).text().trim();$(this).toggleClass("unlocked"),"Combat"===t?l.combat=!l.combat:v(l.unlocked,t),h(),$(a).text(l.unlocked.length),localStorage.setObject(n,l)}function q(e){var t,s=$(this).attr("data-src");$(this).toggleClass("complete"),"achievement"===s?(v(l.complete.achievements,$(".json-description",this).text().trim()),d.achievements.update()):"quest"===s?(t=$("h4",this).text().trim(),$(this).hasClass("complete")?l.qp=l.qp+d.quests.data[t].rewards.qp:l.qp=l.qp-d.quests.data[t].rewards.qp,v(l.complete.quests,t),h(),$(c).text(l.qp)):"pet"===s?(v(l.complete.pets,$("h4",this).text().trim()),d.pets.update()):"collection"===s&&(v(l.complete.collections,$("h4",this).text().trim()),d.collections.update()),localStorage.setObject(n,l)}$(document).ready(function(){$("#skills-wrapper .skill-item").on("click",g),$(".show-hide").on("click",function(){var e=$(this).attr("data-src").split(","),t=e[0];"hide"===e[1]?($(this).attr("data-src",t+",show"),$(this).attr("src","/assets/images/svg/show.svg")):($(this).attr("data-src",t+",hide"),$(this).attr("src","/assets/images/svg/hide.svg")),"achievement"===t?d.achievements.update():"quest"===t?d.quests.update():"pet"===t?d.pets.update():"collection"===t&&d.collections.update()}),$("#btn-download").on("click",function(){var e,t,s;e="data.json",t=l,t=new Blob([JSON.stringify(t)],{type:"text/json"}),(s=document.createElement("a")).download=e,s.href=window.URL.createObjectURL(t),s.dataset.downloadurl=["text/json",s.download,s.href].join(":"),e=new MouseEvent("click",{view:window,bubbles:!0,cancelable:!0}),s.dispatchEvent(e),s.remove()}),$("#btn-upload").on("click",s);for(const t in d){var e=d[t];$.getJSON(e.dir,function(e){this.data=e,this.update()}.bind(e))}p()})}();